version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`tu-dominio.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - JWT_EXPIRES_IN=7d
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost,http://localhost:80}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER:-social_content_user}
      - DB_PASSWORD=${DB_PASSWORD:-social_content_password}
      - DB_NAME=${DB_NAME:-social_content_ai}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL Database
  mysql:
    image: mysql:8.0
    platform: linux/amd64
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M --max-connections=200
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-social_content_ai}
      MYSQL_USER: ${MYSQL_USER:-social_content_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-social_content_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts/backup-production.sh:/usr/local/bin/backup.sh:ro
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER:-social_content_user}", "-p${MYSQL_PASSWORD:-social_content_password}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    labels:
      - "backup.enable=true"
      - "backup.schedule=0 2 * * *"

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: