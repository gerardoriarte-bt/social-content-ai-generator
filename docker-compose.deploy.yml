version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: social_content_mysql
    environment:
      MYSQL_ROOT_PASSWORD: social_content_password
      MYSQL_DATABASE: social_content_ai
      MYSQL_USER: social_content_user
      MYSQL_PASSWORD: social_content_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --innodb-buffer-pool-size=256M --max-connections=200
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: social_content_backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=social_content_user
      - DB_PASSWORD=social_content_password
      - DB_NAME=social_content_ai
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=7d
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: social_content_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: social_content_nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
